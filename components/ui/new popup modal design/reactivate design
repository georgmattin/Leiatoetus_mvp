'use client'

import { useEffect, useState } from 'react'
import { X, Loader2 } from 'lucide-react'

interface TeavitusReactivateModalProps {
  isOpen: boolean
  onClose: () => void
  nextPaymentDate?: string // Optional prop for the next payment date
}

export default function TeavitusReactivateModal1({
  isOpen,
  onClose,
  nextPaymentDate = '02.04.2025', // Default value provided
}: TeavitusReactivateModalProps) {
  const [mounted, setMounted] = useState(false)
  const [isLoading, setIsLoading] = useState(false)

  useEffect(() => {
    if (isOpen) {
      setMounted(true)
      document.body.style.overflow = 'hidden'
    } else {
      const timer = setTimeout(() => setMounted(false), 300)
      document.body.style.overflow = 'unset'
      return () => clearTimeout(timer)
    }
  }, [isOpen])

  const handleReactivateClick = async () => {
    try {
      setIsLoading(true)
      // Add your reactivation logic here
      await new Promise(resolve => setTimeout(resolve, 1000)) // Simulate API call
      onClose()
    } catch (error) {
      console.error('Error reactivating subscription:', error)
    } finally {
      setIsLoading(false)
    }
  }

  if (!mounted) return null

  return (
    <div
      className={`fixed inset-0 z-50 bg-black/40 ${
        isOpen ? 'opacity-100' : 'opacity-0'
      } transition-all duration-300`}
    >
      <div className="fixed left-[50%] top-[50%] z-50 w-full max-w-lg translate-x-[-50%] translate-y-[-50%] p-6">
        <div className="relative overflow-hidden rounded-2xl bg-white shadow-xl">
          <div className="relative p-8">
            {/* Close Button */}
            <div className="absolute right-4 top-4">
              <button
                onClick={onClose}
                className="rounded-lg p-2 text-gray-400 transition-colors hover:text-gray-500"
              >
                <X className="h-5 w-5" />
              </button>
            </div>

            {/* Title */}
            <h2 className="mb-4 text-2xl font-bold tracking-tight text-gray-900">
              Teavituste aktiveerimine
            </h2>

            {/* Description */}
            <div className="mb-8 space-y-4">
              <p className="text-base text-gray-600">
                Kas soovid teavitused uuesti aktiveerida?
              </p>
              <p className="text-base text-gray-600">
                JÃ¤rgmine makse toimub{' '}
                <span className="font-medium text-gray-900">{nextPaymentDate}</span>.
              </p>
            </div>

            {/* Buttons */}
            <div className="flex flex-col gap-3">
              <button
                onClick={handleReactivateClick}
                disabled={isLoading}
                className="relative inline-flex items-center justify-center rounded-full bg-emerald-600 px-8 py-3 text-base font-semibold text-white transition-all hover:bg-emerald-700 focus:outline-none focus:ring-2 focus:ring-emerald-600 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-70"
              >
                {isLoading ? (
                  <>
                    <Loader2 className="mr-2 h-5 w-5 animate-spin" />
                    <span>Aktiveerimine...</span>
                  </>
                ) : (
                  'Aktiveeri teavitused'
                )}
              </button>
              <button
                onClick={onClose}
                disabled={isLoading}
                className="inline-flex items-center justify-center rounded-full border border-gray-300 bg-white px-8 py-3 text-base font-semibold text-gray-700 transition-all hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-70"
              >
                Tagasi
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}

